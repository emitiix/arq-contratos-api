openapi: 3.0.4
info:
  title: Emitix
  description: Documentação Swagguer dos contratos de requisição.
  termsOfService: https://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.12
externalDocs:
  description: Find out more about Swagger
  url: https://swagger.io
servers:
  - url: https://petstore3.swagger.io/api/v3
tags:
  - name: Usuário
    description: Enpoints Usuário
    externalDocs:
      description: Documentação
      url: https://docs.google.com/document/d/1vmQgTArb0GROGKt4phBKouThh5RzYcdB_qH4hp8DevU/edit?pli=1&tab=t.0
paths:
  /cadastrarUsuario:
    post:
      tags:
        - Usuário
      summary: Cadastro de Usuário.
      description: Cadastrar um novo usuário.
      operationId: cadastroUsuario
      requestBody:
        description: Cadastrar um novo usuário.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Usuario'
        required: true
      responses:
        '200':
          description: Usuário Cadastrado com Sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usuario'
        '400':
          description: Invalid ID supplied
        '404':
          description: Usuário não encontrado
        '422':
          description: Validation exception
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MensagemErrorException"
  /login:
    post:
      tags:
        - Autenticação
      summary: Realizar login
      description: Autentica um usuário e retorna o token de acesso.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Login realizado com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        '401':
          description: Credenciais inválidas
components:
  schemas:
    Endereco:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        CEP:
          type: string
          example: '37411-500'
        Rua:
          type: string
          example: 'Rua da Tristeza'
        Número:
          type: integer
          format: int32
          example: 100
        Complemento:
          type: string
          example: 'Casa 09'
        Bairro:
          type: string
          example: 'Açougue'
        Cidade:
          type: string
          example: 'Tocaia'
        UF:
          type: string
          example: 'PE'
    Usuario:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        nome:
          type: string
          example: 'theUser'
        sobrenome:
          type: string
          example: 'John'
        cpf:
          type: string
          example: '142.585.865-87'
        telefone:
          type: string
          example: '81988326985'
        endereco:
          $ref: '#/components/schemas/Endereco'
        DataNascimento:
          type: string
          example: '18/08/2000'
        email:
          type: string
          example: 'john@email.com'
        senha:
          type: string
          example: 'Ws23948%'
        planoEscolhido:
          type: integer
          description: Plano Escolhido para acessar o Sistema
          format: int32
          example: 1
    LoginRequest:
      type: object
      properties:
          email:
            type: string
            example: "user@email.com"
          senha:
            type: string
            format: password
            example: "senha123"
      required:
        - email
        - senha  
    MensagemErrorException:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
      required:
        - code
        - message     